name: "Test Arch Linux ISO Build"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-package:
    name: "Test Package: arche-install"
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest

    steps:
      - name: "Install System Dependencies"
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed \
            base-devel git namcap shellcheck \
            util-linux coreutils e2fsprogs parted dosfstools

      - name: "Check out repository code"
        uses: actions/checkout@v4

      - name: "Test: ShellCheck PKGBUILD"
        working-directory: pkg/arche-install
        run: shellcheck PKGBUILD --exclude SC2148,SC2034,SC2154,SC2164 PKGBUILD

      - name: "Test: Lint PKGBUILD with namcap"
        working-directory: pkg/arche-install
        run: namcap PKGBUILD
      
      - name: "Test: .SRCINFO is up-to-date"
        working-directory: pkg/arche-install
        run: |
          useradd -m builduser || true
          chown -R builduser:builduser .
          runuser -u builduser -- bash -lc '
            if [ ! -f .SRCINFO ]; then
              makepkg --printsrcinfo > .SRCINFO
            fi
            makepkg --printsrcinfo > .SRCINFO.generated
          '
          diff .SRCINFO .SRCINFO.generated

      - name: "Test: Build package with makepkg"
        working-directory: pkg/arche-install
        run: |
          useradd -m builduser || true
          chown -R builduser:builduser .
          # Dependencies are pre-installed above; avoid sudo prompts by not using -s
          runuser -u builduser -- makepkg -fc --noconfirm

  test-iso-build:
    name: "Test: ISO Build"
    needs: test-package
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged

    steps:
      - name: "Install ISO Build Dependencies"
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm --needed archiso grub git shellcheck memtest86+-efi

      - name: "Check out repository code"
        uses: actions/checkout@v4

      - name: "Test: Lint profile scripts"
        run: |
          echo "--- Linting profiledef.sh ---"
          shellcheck profiledef.sh
          echo "--- Linting customize_airootfs.sh ---"
          shellcheck airootfs/root/customize_airootfs.sh

      - name: "Test: Build ISO with mkarchiso"
        run: |
          mkarchiso -v -w /tmp/archiso-work -o /tmp/archiso-out .
      
      - name: "List built files"
        run: ls -lh /tmp/archiso-out
